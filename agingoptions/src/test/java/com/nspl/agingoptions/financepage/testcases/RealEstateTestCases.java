package com.nspl.agingoptions.financepage.testcases;

import java.time.Duration;
import java.util.Map;

import org.testng.annotations.Test;

import com.agingoptions.finance.Liabilities;
import com.agingoptions.finance.RealEstatePage;
import com.agingoptions.lpolandingpage.LpoLandingPage;
import com.nspl.agingoptions.commoncode.AssetsCommonCode;
import com.nspl.agingoptions.commoncode.CommonCode;
import com.nspl.agingoptions.webUtil.BaseTest;
import com.nspl.agingoptions.webUtil.DataUtil;

public class RealEstateTestCases extends BaseTest {

	@Test(priority=1)
	public void FTC_007_AddRealEstateSaveContinueLaterButton() {
		CommonCode common=   new CommonCode(util);
		LpoLandingPage lpo = new LpoLandingPage(util);
		lpo.clickFinanceSideBarLink();
		AssetsCommonCode assets = new AssetsCommonCode(util);
		assets.clickAssetsSideBarLink();
		assets.clickRealEstate();
		RealEstatePage realEstate=	new RealEstatePage(util);
		realEstate.clickAddRealEstateButton();
		realEstate.selectVacationOrSecondaryHomeFromDescriptionOfPropertyDropDown();
		realEstate.openFinanialAndOwnershipInfoAccordian();
		String expectedPurchaseDate="10-19-2025";
		realEstate.inputPurchaseDate(expectedPurchaseDate);
		String expectedPurchasePrice="9843";
		realEstate.inputPurchasePrice(expectedPurchasePrice);
		String expectedCurrentValue="46454";
		realEstate.inputCurrentValue(expectedCurrentValue);
		assets.selectOwnerAsJoint();
		realEstate.checkMortgageCheckBox();
		String expectedLenderName="CrossCountry Mortgage";
		realEstate.inputNameOfLender(expectedLenderName);
		String expectedMortgageEndDate="10-19-2030";
		realEstate.inputMortgageEndDate(expectedMortgageEndDate);
		String expectedLoanNumber="Loannum2384";
		realEstate.inputLoanNumber(expectedLoanNumber);
		String expectMonthlyAmount="5567";
		realEstate.inputMonthlyAmount(expectMonthlyAmount);
		String expectedInterestRate="15";
		realEstate.inputInterestRate(expectedInterestRate);
		String expectedOutstandingBalance="5675";
		assets.selectPrimaryPhoneNumberOptions();
		realEstate.inputOutstandingBalance(expectedOutstandingBalance);
		String epxectedPhoneNumber="7384578345";
		realEstate.inputLendersPhoneNumber(epxectedPhoneNumber);
		String expectedEmail="crosscountrymortgage@maildrop.cc";
		realEstate.inputLendersEmail(expectedEmail);
		realEstate.clickLenderInfoSaveButton();
		realEstate.clickUpdateContinueLaterButton();
		realEstate.clickVacationOrSecondaryHomeEditIconTable();
		String acutualDescriptionOfPropertySelectText=	realEstate.getDesriptionOfPropertySelectText();
		realEstate.openFinanialAndOwnershipInfoAccordian();
		util.holdOn(Duration.ofSeconds(3));
		String actulPurchaseDateInputText=	realEstate.getPurchageDateInputText();
		String actualPurchasePriceText=	realEstate.getPurchagePriceText();
		String actualCurrentValueText= realEstate.getCurrentValueText();
		String actualOwnerSelectText=  assets.getOwnerSelectedText();
		realEstate.checkMortgageCheckboxIsCheck();
		realEstate.openLenderInfoAccordian();
		realEstate.lenderInfoMortgageEditIcon();
		String actualNameOfLenderText=	realEstate.getNameOfLenderInputText();
		String mortgageEndDateAcutalText=	realEstate.getMortgageEndDateInputText();
		String actualLoanNumberText=	realEstate.getLoanNumberInputText();
		String actualMonthlyAmountText=	realEstate.getMonthlyAmountInputText();
		String actualInterestRateText=	realEstate.getInterestRateInputText();
		String actualOutStandingBalance=	realEstate.getOutStandingBalanceInputText();
		realEstate.clickLenderInfoMobileEditIcon();
		util.holdOn(Duration.ofSeconds(4));
		realEstate.clickAddContactCloseIcon();
		realEstate.clickLenderInfoMobileEditIcon();
		String actualEmail=	realEstate.getLenderEmail();
		String acutalPhoneNumber=	realEstate.getLenderPhoneNumber();
		realEstate.clickAddContactCloseIcon();
		realEstate.clickLenderInfoUpdateButton();
		realEstate.clickUpdateContinueLaterButton();
		util.verifyActualExpectedText(acutualDescriptionOfPropertySelectText, "Vacation or Secondary Home", "Description of Property");
		util.verifyActualExpectedText(expectedPurchaseDate,actulPurchaseDateInputText, "Purchage Date");
		util.verifyActualExpectedText(expectedPurchasePrice,actualPurchasePriceText, "Purchase Price");
		util.verifyActualExpectedText(expectedCurrentValue,actualCurrentValueText, "Current Value");
		util.verifyActualExpectedText(actualOwnerSelectText,"Joint", "Owner");
		util.verifyActualExpectedText(actualNameOfLenderText,expectedLenderName, "Name Of Lender");
		util.verifyActualExpectedText(expectedMortgageEndDate,mortgageEndDateAcutalText, "Mortgage End Date");
		util.verifyActualExpectedText(actualLoanNumberText,expectedLoanNumber, "Loan Number");
		util.verifyActualExpectedText(actualMonthlyAmountText,expectMonthlyAmount, "Monthly Amount");
		util.verifyActualExpectedText(expectedInterestRate,actualInterestRateText, "Interest Rate");
		util.verifyActualExpectedText(expectedOutstandingBalance, actualOutStandingBalance, "OutStanding Balance");
		util.verifyActualExpectedText(actualEmail, expectedEmail, "Email");
		util.verifyActualExpectedText(acutalPhoneNumber, epxectedPhoneNumber, "Phone Number");
		assets.clickLiabilitiesSideBarLink();
		Liabilities liability=	new Liabilities(util);
		liability.clickCrossCountryMortgageEditIcon();
		util.holdOn(Duration.ofSeconds(5));
		String typeOfLiabilityText=    liability.getTypeOfLiabilitesSelectedText();
		String subTypeOfLiabilityText=    liability.getSubTypeOfLiabilitesSelectedText();
		String	liabilityPayOffDateAcutalText=	liability.getPayOffDate();
		String actualLiabilityNameOfLenderActualText=		liability.getNameOfLenderInputText();
		String acutalLiabilityOutstandingBalance=		liability.getOutstandingBalanceInputText();
		String actualLiabilityMonthlyAmount=	liability.getMonthlyAmountInputText();
		liability.openLenderContactAddressInfoAccordian();
		liability.clickPrimaryContactEditIcon();
		acutalPhoneNumber=null;
		actualEmail=null;
		acutalPhoneNumber=	realEstate.getLenderPhoneNumber();
		actualEmail=	realEstate.getLenderEmail();
		realEstate.clickAddContactCloseIcon();
		realEstate.clickUpdateContinueLaterButton();
		util.verifyActualExpectedText(typeOfLiabilityText,"Real Estate" ,"Type of Liability" );
		util.verifyActualExpectedText(subTypeOfLiabilityText,"Mortgage" ,"Sub Type of Liability" );
		util.verifyActualExpectedText(actualLiabilityNameOfLenderActualText, actualNameOfLenderText, "Name of lender");
		util.verifyActualExpectedText(acutalLiabilityOutstandingBalance, actualOutStandingBalance, "Outstanding Balance");
		util.verifyActualExpectedText(actualLiabilityMonthlyAmount,expectMonthlyAmount , "Monthly Amount Balance");
		util.verifyActualExpectedText(liabilityPayOffDateAcutalText, mortgageEndDateAcutalText, "Mortgage End Date");
		util.verifyActualExpectedText(acutalPhoneNumber, epxectedPhoneNumber, "Phone Number");
		util.verifyActualExpectedText(actualEmail, expectedEmail, "Email");
	}

	@Test(priority  =2)
	public void FTC_008_AddRealEstateSaveAddAnotherButton() {
		CommonCode common=   new CommonCode(util);
		LpoLandingPage lpo = new LpoLandingPage(util);
		lpo.clickFinanceSideBarLink();
		AssetsCommonCode assets = new AssetsCommonCode(util);
		assets.clickAssetsSideBarLink();
		assets.clickRealEstate();
		RealEstatePage realEstate=	new RealEstatePage(util);
		realEstate.clickAddRealEstateButton();
		realEstate.selectOtherFromDescriptionOfPropertyDropDown();
		String expectedOtherDescriptionOfProperty="Rk Property";
		realEstate.inputOtherDescriptionOfProperty(expectedOtherDescriptionOfProperty);
		assets.inputAddress("122002");
		realEstate.openFinanialAndOwnershipInfoAccordian();
		String expectedPurchaseDate="11-25-2023";
		realEstate.inputPurchaseDate(expectedPurchaseDate);
		String expectedPurchasePrice="98765";
		realEstate.inputPurchasePrice(expectedPurchasePrice);
		String expectedCurrentValue="34567";
		realEstate.inputCurrentValue(expectedCurrentValue);
		assets.selectPrimaryMemberAsOwner();
		common.clickSaveAddAnotherButton();
		util.holdOn(Duration.ofSeconds(4));
		common.clickPreviousButton();
		realEstate.clickRkPropertyEditIcon();
		String acutualDescriptionOfPropertySelectText=	realEstate.getDesriptionOfPropertySelectText();
		util.holdOn(Duration.ofSeconds(4));
		String actualOtherText=		realEstate.getOtherDescriptionOfPropertyInputText();
		realEstate.openFinanialAndOwnershipInfoAccordian();
		util.holdOn(Duration.ofSeconds(3));
		String actulPurchaseDateInputText=	realEstate.getPurchageDateInputText();
		String actualPurchasePriceText=	realEstate.getPurchagePriceText();
		String actualCurrentValueText= realEstate.getCurrentValueText();
		String actualOwnerSelectText=  assets.getOwnerSelectedText();
		DataUtil data=	new DataUtil();
		Map<String,String> allData=	data.getTestCaseData("Health_001");
		String firstName=	allData.get("firstName");
		String lastName=	allData.get("lastName");
		realEstate.clickUpdateContinueLaterButton();
		util.verifyActualExpectedText(acutualDescriptionOfPropertySelectText, "Other", "Description of Property");
		util.verifyActualExpectedText(actualOtherText, expectedOtherDescriptionOfProperty, "Description of Property Other Text Box");
		util.verifyActualExpectedText(expectedPurchaseDate,actulPurchaseDateInputText, "Purchage Date");
		util.verifyActualExpectedText(expectedPurchasePrice,actualPurchasePriceText, "Purchase Price");
		util.verifyActualExpectedText(expectedCurrentValue,actualCurrentValueText, "Current Value");
		util.verifyActualExpectedText(actualOwnerSelectText,firstName+" "+lastName, "Owner");

	}

	@Test(priority=3)
	public void FTC_009_AddRealEstateSaveAndProceedToBussinessInterestButton() {
		CommonCode common=   new CommonCode(util);
		util.refreshPage();
		LpoLandingPage lpo = new LpoLandingPage(util);
		lpo.clickFinanceSideBarLink();
		AssetsCommonCode assets = new AssetsCommonCode(util);
		assets.clickAssetsSideBarLink();
		assets.clickRealEstate();
		RealEstatePage realEstate=	new RealEstatePage(util);
		realEstate.clickAddRealEstateButton();
		realEstate.selectPrimaryHomeFromDescriptionOfPropertyDropDown();
		realEstate.openFinanialAndOwnershipInfoAccordian();
		String expectedPurchaseDate="11-25-2023";
		realEstate.inputPurchaseDate(expectedPurchaseDate);
		String expectedPurchasePrice="98765";
		realEstate.inputPurchasePrice(expectedPurchasePrice);
		String expectedCurrentValue="34567";
		realEstate.inputCurrentValue(expectedCurrentValue);
		assets.selectPrimaryMemberAsOwner();
		//this code will add 2nd mortgage in the debt against properties in the real estate and reflect in the liabilites
		realEstate.check2ndMortgageButton();
		String secondMortgageExpectedLenderName="Sample Adjustable Rate Mortgage";
		realEstate.inputNameOfLender(secondMortgageExpectedLenderName);
		String secondMortgageExpectedMortgageEndDate="11-18-2029";
		realEstate.inputMortgageEndDate(secondMortgageExpectedMortgageEndDate);
		String secondMortgageExpectedMortgageLoanNumber="Loannum23423";
		realEstate.inputLoanNumber(secondMortgageExpectedMortgageLoanNumber);
		String secondMortgageExpectedMonthlyAmount="98423";
		realEstate.inputMonthlyAmount(secondMortgageExpectedMonthlyAmount);
		String secondMortgageExpectedInterestRate="19";
		realEstate.inputInterestRate(secondMortgageExpectedInterestRate);
		String secondMortgageExpectedOutStandingBalance="92343";
		realEstate.inputOutstandingBalance(secondMortgageExpectedOutStandingBalance);
		realEstate.inputLenderAddress("122002");
		assets.selectPrimaryPhoneNumberOptions();
		String secondMortgageExpectedPhoneNumber="9845934854";
		realEstate.inputLendersPhoneNumber(secondMortgageExpectedPhoneNumber);
		String secondMortgageExpectedEmail="sampleadjuctablerate@maildrop.cc";  
		realEstate.inputLendersEmail(secondMortgageExpectedEmail);
		realEstate.clickLenderInfoSaveButton();
		util.holdOn(Duration.ofSeconds(1));
		//this code will add line of mortgage in the debt against properties in the real estate and reflect in the liabilites
		realEstate.checkLineOfMortgageButton();
		String lineOfCrediteExpectedLenderName="Dummy FHA Loan";
		realEstate.inputNameOfLender(lineOfCrediteExpectedLenderName);
		String lineOfCreditExpectedMortgageEndDate="11-18-2028";
		realEstate.inputPayOffDate(lineOfCreditExpectedMortgageEndDate);
		String lineOfCreditExpectedMortgageLoanNumber="LOANNUM9893";
		realEstate.inputLoanNumber(lineOfCreditExpectedMortgageLoanNumber);
		String lineOfCreditExpectedMonthlyAmount="33453";
		realEstate.inputMonthlyAmount(lineOfCreditExpectedMonthlyAmount);
		String lineOfCreditExpectedInterestRate="9";
		realEstate.inputInterestRate(lineOfCreditExpectedInterestRate);
		String lineOfCreditExpectedOutStandingBalance="67455";
		realEstate.inputOutstandingBalance(lineOfCreditExpectedOutStandingBalance);
		realEstate.inputLenderAddress("122002");
		assets.selectPrimaryPhoneNumberOptions();
		String lineOfCreditExpectedPhoneNumber="9845934854";
		realEstate.inputLendersPhoneNumber(lineOfCreditExpectedPhoneNumber);
		String lineOfCreditExpectedEmail="dummyfhaloan@maildrop.cc";  
		realEstate.inputLendersEmail(lineOfCreditExpectedEmail);
		realEstate.clickLenderInfoSaveButton();
		util.holdOn(Duration.ofSeconds(1));
		//this code will add Other mortgage in the debt against properties in the real estate and reflect in the liabilites
		realEstate.checkOtherMortgageButton();
		String otherMortgageExpectedLenderName="Mock USDA Loan";
		realEstate.inputNameOfLender(otherMortgageExpectedLenderName);
		String otherMortgageExpectedMortgageEndDate="10-26-2027";
		realEstate.inputPayOffDate(otherMortgageExpectedMortgageEndDate);
		String otherMortgageExpectedMortgageLoanNumber="Loannum4567";
		realEstate.inputLoanNumber(otherMortgageExpectedMortgageLoanNumber);
		String otherMortgageExpectedMonthlyAmount="67854";
		realEstate.inputMonthlyAmount(otherMortgageExpectedMonthlyAmount);
		String otherMortgageExpectedInterestRate="7";
		realEstate.inputInterestRate(otherMortgageExpectedInterestRate);
		String otherMortgageExpectedOutStandingBalance="7864";
		realEstate.inputOutstandingBalance(otherMortgageExpectedOutStandingBalance);
		realEstate.inputLenderAddress("122002");
		assets.selectPrimaryPhoneNumberOptions();
		String otherMortgageExpectedPhoneNumber="7767896767";
		realEstate.inputLendersPhoneNumber(otherMortgageExpectedPhoneNumber);
		String otherMortgageExpectedEmail="mockusdaloan@maildrop.cc";  
		realEstate.inputLendersEmail(otherMortgageExpectedEmail);
		realEstate.clickLenderInfoSaveButton();
		realEstate.openLenderInfoAccordian();
		assets.clickNextBusinessInterestButton();
		util.holdOn(Duration.ofSeconds(4));
		assets.clickLiabilitiesSideBarLink();
		//this code will verify 2nd mortgage is added in the liabilities and reflect in the liabilites or not
		Liabilities liability=	new Liabilities(util);
		liability.clickEditIconofSampleAdjustableRateMortgage();
		util.holdOn(Duration.ofSeconds(5));
		String typeOfLiabilityText=    liability.getTypeOfLiabilitesSelectedText();
		String actual2ndMortgageSubTypeOfLiabilityText=    liability.getSubTypeOfLiabilitesSelectedText();
		String	actual2ndMortgageLiabilityPayOffDateAcutalText=	liability.getPayOffDate();
		String actual2ndMortgageNameOfLenderActualText=		liability.getNameOfLenderInputText();
		String actual2ndMortgageLiabilityOutstandingBalance=		liability.getOutstandingBalanceInputText();
		String actual2ndMortgageLiabilityMonthlyAmount=	liability.getMonthlyAmountInputText();
		liability.openLenderContactAddressInfoAccordian();
		util.holdOn(Duration.ofSeconds(1));
		String physicalAddressAcutalText=      liability.getPhysicalAddressText();
		String primaryContactAcutalText=	liability.getPrimaryContactText();
		util.verifyActualExpectedText(typeOfLiabilityText,"Real Estate" ,"Type Of liabilities" );
		util.verifyActualExpectedText(actual2ndMortgageSubTypeOfLiabilityText,"2nd Mortgage" ,"Sub-types of liabilities*" );
		util.verifyActualExpectedText(actual2ndMortgageNameOfLenderActualText,secondMortgageExpectedLenderName ,"Name Of Lender" );
		util.verifyActualExpectedText(actual2ndMortgageLiabilityPayOffDateAcutalText,secondMortgageExpectedMortgageEndDate ,"Pay Off Date" );
		util.verifyActualExpectedText(actual2ndMortgageLiabilityOutstandingBalance,secondMortgageExpectedOutStandingBalance ,"Out standing balance" );
		util.verifyActualExpectedText(actual2ndMortgageLiabilityMonthlyAmount,secondMortgageExpectedMonthlyAmount ,"Monthly Amount" );
		util.verifyActualExpectedText(physicalAddressAcutalText,"Physical Address" ,"Physical Address" );
		util.verifyActualExpectedText(primaryContactAcutalText,"Primary contact" ,"Primary contact" );
		realEstate.clickUpdateContinueLaterButton();
		util.holdOn(Duration.ofSeconds(2));
		//this code will verify Line of Credit is added in the liabilities and reflect in the liabilites or not
		liability.clickEditIconofDummyFHALoanMortgageEditIcon();
		typeOfLiabilityText=    liability.getTypeOfLiabilitesSelectedText();
		String actualLineOfCreaditSubTypeOfLiabilityText=    liability.getSubTypeOfLiabilitesSelectedText();
		String	actualLineOfCreaditLiabilityPayOffDateAcutalText=	liability.getPayOffDate();
		String actualLineOfCreaditNameOfLenderActualText=		liability.getNameOfLenderInputText();
		String actualLineOfCreaditLiabilityOutstandingBalance=		liability.getOutstandingBalanceInputText();
		String actualLineOfCreaditLiabilityMonthlyAmount=	liability.getMonthlyAmountInputText();
		liability.openLenderContactAddressInfoAccordian();
		util.holdOn(Duration.ofSeconds(1));
		physicalAddressAcutalText=      liability.getPhysicalAddressText();
		primaryContactAcutalText=	liability.getPrimaryContactText();
		util.verifyActualExpectedText(typeOfLiabilityText,"Real Estate" ,"Type Of liabilities" );
		util.verifyActualExpectedText(actualLineOfCreaditSubTypeOfLiabilityText,"Line of Credit" ,"Sub-types of liabilities*" );
		util.verifyActualExpectedText(actualLineOfCreaditNameOfLenderActualText,lineOfCrediteExpectedLenderName ,"Name Of Lender" );
		util.verifyActualExpectedText(actualLineOfCreaditLiabilityPayOffDateAcutalText,lineOfCreditExpectedMortgageEndDate ,"Pay Off Date" );
		util.verifyActualExpectedText(actualLineOfCreaditLiabilityOutstandingBalance,lineOfCreditExpectedOutStandingBalance ,"Out standing balance" );
		util.verifyActualExpectedText(actualLineOfCreaditLiabilityMonthlyAmount,lineOfCreditExpectedMonthlyAmount ,"Monthly Amount" );
		util.verifyActualExpectedText(physicalAddressAcutalText,"Physical Address" ,"Physical Address" );
		util.verifyActualExpectedText(primaryContactAcutalText,"Primary contact" ,"Primary contact" );

		util.holdOn(Duration.ofSeconds(4));
		realEstate.clickUpdateContinueLaterButton();
		//this code will verify Other Mortgage is added in the liabilities and reflect in the liabilites or not
		liability.clickMockUSDALoanMortgageEditIconMortgageEditIcon();
		String actualOtherSubTypeOfLiabilityText=    liability.getSubTypeOfLiabilitesSelectedText();
		String	actualOtherLiabilityPayOffDateAcutalText=	liability.getPayOffDate();
		String actualOtherLenderNameActualText=		liability.getNameOfLenderInputText();
		String actualOtherLiabilityOutstandingBalance=		liability.getOutstandingBalanceInputText();
		String actualOtherLiabilityMonthlyAmount=	liability.getMonthlyAmountInputText();
		liability.openLenderContactAddressInfoAccordian();
		util.holdOn(Duration.ofSeconds(1));
		physicalAddressAcutalText=      liability.getPhysicalAddressText();
		primaryContactAcutalText=	liability.getPrimaryContactText();
		util.verifyActualExpectedText(typeOfLiabilityText,"Real Estate" ,"Type Of liabilities" );
		util.verifyActualExpectedText(actualOtherSubTypeOfLiabilityText,"Other" ,"Sub-types of liabilities*" );
		util.verifyActualExpectedText(actualOtherLenderNameActualText,otherMortgageExpectedLenderName ,"Name Of Lender" );
		util.verifyActualExpectedText(actualOtherLiabilityPayOffDateAcutalText,otherMortgageExpectedMortgageEndDate ,"Pay Off Date" );
		util.verifyActualExpectedText(actualOtherLiabilityOutstandingBalance,otherMortgageExpectedOutStandingBalance ,"Out standing balance" );
		util.verifyActualExpectedText(actualOtherLiabilityMonthlyAmount,otherMortgageExpectedMonthlyAmount ,"Monthly Amount" );
		util.verifyActualExpectedText(physicalAddressAcutalText,"Physical Address" ,"Physical Address" );
		util.verifyActualExpectedText(primaryContactAcutalText,"Primary contact" ,"Primary contact" );
		realEstate.clickUpdateContinueLaterButton();
	}


}
