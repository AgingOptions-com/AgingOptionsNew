<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-25T17:24:24 IST" name="Default suite" finished-at="2025-03-25T17:27:38 IST" duration-ms="194336">
    <groups>
    </groups>
    <test started-at="2025-03-25T17:24:24 IST" name="Default test" finished-at="2025-03-25T17:27:38 IST" duration-ms="194336">
      <class name="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:24:24 IST" name="beforeSuite" finished-at="2025-03-25T17:24:24 IST" duration-ms="255" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:24:24 IST" name="beforeTest" finished-at="2025-03-25T17:25:38 IST" duration-ms="74037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:25:38 IST" name="beforeClass" finished-at="2025-03-25T17:25:38 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:25:38 IST" name="beforeMethod" finished-at="2025-03-25T17:25:38 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Health_001_Personal_MedicalHistoryPage()[pri:1, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:25:38 IST" name="Health_001_Personal_MedicalHistoryPage" finished-at="2025-03-25T17:26:00 IST" duration-ms="22316" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_001_Personal_MedicalHistoryPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:00 IST" name="afterMethod" finished-at="2025-03-25T17:26:01 IST" duration-ms="324" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_001_Personal_MedicalHistoryPage status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage()[pri:1, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:01 IST" name="beforeMethod" finished-at="2025-03-25T17:26:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_002_MedicalConditionsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Health_002_MedicalConditionsElementVisibility()[pri:2, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:01 IST" name="Health_002_MedicalConditionsElementVisibility" finished-at="2025-03-25T17:26:18 IST" depends-on-methods="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage" duration-ms="17424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_002_MedicalConditionsElementVisibility -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:18 IST" name="afterMethod" finished-at="2025-03-25T17:26:18 IST" duration-ms="55" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_002_MedicalConditionsElementVisibility status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_002_MedicalConditionsElementVisibility()[pri:2, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_002_MedicalConditionsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Health_003_EnvironmentalLifeStyleFactorsElementVisibility()[pri:3, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:18 IST" name="Health_003_EnvironmentalLifeStyleFactorsElementVisibility" finished-at="2025-03-25T17:26:29 IST" depends-on-methods="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage" duration-ms="11130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_003_EnvironmentalLifeStyleFactorsElementVisibility -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:18 IST" name="beforeMethod" finished-at="2025-03-25T17:26:18 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_003_EnvironmentalLifeStyleFactorsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:29 IST" name="afterMethod" finished-at="2025-03-25T17:26:29 IST" duration-ms="51" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_003_EnvironmentalLifeStyleFactorsElementVisibility status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_003_EnvironmentalLifeStyleFactorsElementVisibility()[pri:3, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_003_EnvironmentalLifeStyleFactorsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Health_004_BloodTypeSelection()[pri:4, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:29 IST" name="Health_004_BloodTypeSelection" finished-at="2025-03-25T17:27:08 IST" depends-on-methods="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage" duration-ms="39263" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_004_BloodTypeSelection -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:26:29 IST" name="beforeMethod" finished-at="2025-03-25T17:26:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_004_BloodTypeSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:08 IST" name="afterMethod" finished-at="2025-03-25T17:27:09 IST" duration-ms="42" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_004_BloodTypeSelection status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_004_BloodTypeSelection()[pri:4, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_004_BloodTypeSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:09 IST" name="beforeMethod" finished-at="2025-03-25T17:27:09 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_005_MedicalConditionElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Health_005_MedicalConditionElement()[pri:5, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:09 IST" name="Health_005_MedicalConditionElement" finished-at="2025-03-25T17:27:31 IST" duration-ms="22727" status="FAIL">
          <exception class="java.lang.IndexOutOfBoundsException">
            <message>
              <![CDATA[Index 8 out of bounds for length 8]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IndexOutOfBoundsException: Index 8 out of bounds for length 8
at java.base/jdk.internal.util.Preconditions.outOfBounds(Preconditions.java:100)
at java.base/jdk.internal.util.Preconditions.outOfBoundsCheckIndex(Preconditions.java:106)
at java.base/jdk.internal.util.Preconditions.checkIndex(Preconditions.java:302)
at java.base/java.util.Objects.checkIndex(Objects.java:385)
at java.base/java.util.ArrayList.get(ArrayList.java:427)
at com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_005_MedicalConditionElement(MarriedUserFamilyInfoTestCases.java:164)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IndexOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_005_MedicalConditionElement -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:31 IST" name="afterMethod" finished-at="2025-03-25T17:27:32 IST" duration-ms="253" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_005_MedicalConditionElement status=FAILURE method=MarriedUserFamilyInfoTestCases.Health_005_MedicalConditionElement()[pri:5, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_005_MedicalConditionElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:32 IST" name="beforeMethod" finished-at="2025-03-25T17:27:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_006_EnvironmentalLifestyleFactorsDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Health_006_EnvironmentalLifestyleFactorsDetails()[pri:6, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:32 IST" name="Health_006_EnvironmentalLifestyleFactorsDetails" finished-at="2025-03-25T17:27:38 IST" duration-ms="6621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_006_EnvironmentalLifestyleFactorsDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:38 IST" name="afterMethod" finished-at="2025-03-25T17:27:38 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_006_EnvironmentalLifestyleFactorsDetails status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_006_EnvironmentalLifestyleFactorsDetails()[pri:6, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_006_EnvironmentalLifestyleFactorsDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:38 IST" name="afterClass" finished-at="2025-03-25T17:27:38 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:38 IST" name="afterTest" finished-at="2025-03-25T17:27:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@69453e37]" started-at="2025-03-25T17:27:38 IST" name="afterSuite" finished-at="2025-03-25T17:27:38 IST" duration-ms="18" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
