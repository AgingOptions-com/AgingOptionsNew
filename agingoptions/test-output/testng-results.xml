<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="4" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-25T09:35:28 IST" name="Default suite" finished-at="2025-03-25T09:37:16 IST" duration-ms="107878">
    <groups>
    </groups>
    <test started-at="2025-03-25T09:35:28 IST" name="Default test" finished-at="2025-03-25T09:37:16 IST" duration-ms="107878">
      <class name="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:35:28 IST" name="beforeSuite" finished-at="2025-03-25T09:35:28 IST" duration-ms="351" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:35:28 IST" name="beforeTest" finished-at="2025-03-25T09:36:26 IST" duration-ms="57164" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:26 IST" name="beforeClass" finished-at="2025-03-25T09:36:26 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:26 IST" name="beforeMethod" finished-at="2025-03-25T09:36:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Health_001_Personal_MedicalHistoryPage()[pri:1, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:26 IST" name="Health_001_Personal_MedicalHistoryPage" finished-at="2025-03-25T09:36:42 IST" duration-ms="16365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_001_Personal_MedicalHistoryPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:42 IST" name="afterMethod" finished-at="2025-03-25T09:36:42 IST" duration-ms="460" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_001_Personal_MedicalHistoryPage status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage()[pri:1, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Health_002_MedicalConditionsElementVisibility()[pri:2, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:42 IST" name="Health_002_MedicalConditionsElementVisibility" finished-at="2025-03-25T09:36:54 IST" depends-on-methods="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage" duration-ms="11479" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on windows (bf0cf65b170810f82183fefa03ace6d8)] -> xpath: (//p[text()='Dementia/Alzheimer’s'])[2]] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.165, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52307}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52307/devtoo..., se:cdpVersion: 134.0.6998.165, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bf0cf65b170810f82183fefa03ace6d8]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of [[ChromeDriver: chrome on windows (bf0cf65b170810f82183fefa03ace6d8)] -> xpath: (//p[text()='Dementia/Alzheimer’s'])[2]] (tried for 10 second(s) with 500 milliseconds interval)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.165, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52307}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52307/devtoo..., se:cdpVersion: 134.0.6998.165, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: bf0cf65b170810f82183fefa03ace6d8
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:229)
at com.nspl.agingoptions.webUtil.WebUtil.isDisplayed(WebUtil.java:1100)
at com.agingoptions.health.PersonalMedicalHistory.spouseDementiaAlzheimerStatus(PersonalMedicalHistory.java:68)
at com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_002_MedicalConditionsElementVisibility(MarriedUserFamilyInfoTestCases.java:41)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_002_MedicalConditionsElementVisibility -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:42 IST" name="beforeMethod" finished-at="2025-03-25T09:36:42 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_002_MedicalConditionsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:54 IST" name="afterMethod" finished-at="2025-03-25T09:36:54 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_002_MedicalConditionsElementVisibility status=FAILURE method=MarriedUserFamilyInfoTestCases.Health_002_MedicalConditionsElementVisibility()[pri:2, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_002_MedicalConditionsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Health_003_EnvironmentalLifeStyleFactorsElementVisibility()[pri:3, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:54 IST" name="Health_003_EnvironmentalLifeStyleFactorsElementVisibility" finished-at="2025-03-25T09:37:05 IST" depends-on-methods="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage" duration-ms="11059" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_003_EnvironmentalLifeStyleFactorsElementVisibility -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:36:54 IST" name="beforeMethod" finished-at="2025-03-25T09:36:54 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_003_EnvironmentalLifeStyleFactorsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:05 IST" name="afterMethod" finished-at="2025-03-25T09:37:05 IST" duration-ms="54" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_003_EnvironmentalLifeStyleFactorsElementVisibility status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_003_EnvironmentalLifeStyleFactorsElementVisibility()[pri:3, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_003_EnvironmentalLifeStyleFactorsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="Health_004_BloodTypeSelection()[pri:4, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:05 IST" name="Health_004_BloodTypeSelection" finished-at="2025-03-25T09:37:14 IST" depends-on-methods="com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_001_Personal_MedicalHistoryPage" duration-ms="9152" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_004_BloodTypeSelection -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:05 IST" name="beforeMethod" finished-at="2025-03-25T09:37:05 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_004_BloodTypeSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:14 IST" name="afterMethod" finished-at="2025-03-25T09:37:15 IST" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_004_BloodTypeSelection status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_004_BloodTypeSelection()[pri:4, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_004_BloodTypeSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:15 IST" name="beforeMethod" finished-at="2025-03-25T09:37:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_005_MedicalConditionElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="Health_005_MedicalConditionElement()[pri:5, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:15 IST" name="Health_005_MedicalConditionElement" finished-at="2025-03-25T09:37:16 IST" duration-ms="1714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Health_005_MedicalConditionElement -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:16 IST" name="afterMethod" finished-at="2025-03-25T09:37:16 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Health_005_MedicalConditionElement status=SUCCESS method=MarriedUserFamilyInfoTestCases.Health_005_MedicalConditionElement()[pri:5, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases.Health_005_MedicalConditionElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:16 IST" name="afterClass" finished-at="2025-03-25T09:37:16 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:16 IST" name="afterTest" finished-at="2025-03-25T09:37:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases@6f4a47c7]" started-at="2025-03-25T09:37:16 IST" name="afterSuite" finished-at="2025-03-25T09:37:16 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.nspl.agingoptions.login_registrationpage.testcases.MarriedUserFamilyInfoTestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
