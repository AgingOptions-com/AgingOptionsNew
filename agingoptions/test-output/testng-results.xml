<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="4" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-05-14T15:23:02 IST" name="Default suite" finished-at="2025-05-14T15:28:32 IST" duration-ms="330849">
    <groups>
    </groups>
    <test started-at="2025-05-14T15:23:02 IST" name="Default test" finished-at="2025-05-14T15:28:32 IST" duration-ms="330849">
      <class name="com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:23:01 IST" name="beforeSuite" finished-at="2025-05-14T15:23:02 IST" duration-ms="491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:23:02 IST" name="beforeTest" finished-at="2025-05-14T15:24:28 IST" duration-ms="85910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:24:28 IST" name="beforeClass" finished-at="2025-05-14T15:24:28 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:24:28 IST" name="beforeMethod" finished-at="2025-05-14T15:24:28 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifyAddOtherTypeProfessional()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifyAddOtherTypeProfessional()[pri:1, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:24:28 IST" name="VerifyAddOtherTypeProfessional" finished-at="2025-05-14T15:25:26 IST" duration-ms="58441" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAddOtherTypeProfessional -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:25:26 IST" name="afterMethod" finished-at="2025-05-14T15:25:27 IST" duration-ms="705" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyAddOtherTypeProfessional status=SUCCESS method=MyServiceProviderTestScript.VerifyAddOtherTypeProfessional()[pri:1, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifyAddOtherTypeProfessional()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:25:27 IST" name="beforeMethod" finished-at="2025-05-14T15:25:27 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifySaveAndproceedToProfessionalDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifySaveAndproceedToProfessionalDetails()[pri:2, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:25:27 IST" name="VerifySaveAndproceedToProfessionalDetails" finished-at="2025-05-14T15:26:25 IST" duration-ms="58618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySaveAndproceedToProfessionalDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:26:25 IST" name="afterMethod" finished-at="2025-05-14T15:26:25 IST" duration-ms="61" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifySaveAndproceedToProfessionalDetails status=SUCCESS method=MyServiceProviderTestScript.VerifySaveAndproceedToProfessionalDetails()[pri:2, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifySaveAndproceedToProfessionalDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:26:25 IST" name="beforeMethod" finished-at="2025-05-14T15:26:25 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifySaveAndAddAnotherProfessional()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifySaveAndAddAnotherProfessional()[pri:3, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:26:25 IST" name="VerifySaveAndAddAnotherProfessional" finished-at="2025-05-14T15:27:26 IST" duration-ms="60738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySaveAndAddAnotherProfessional -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:27:26 IST" name="afterMethod" finished-at="2025-05-14T15:27:26 IST" duration-ms="59" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifySaveAndAddAnotherProfessional status=SUCCESS method=MyServiceProviderTestScript.VerifySaveAndAddAnotherProfessional()[pri:3, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifySaveAndAddAnotherProfessional()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:27:26 IST" name="beforeMethod" finished-at="2025-05-14T15:27:26 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifySaveProfessionalDetailsWithCopySameDataToSpouseUnchecked()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="VerifySaveProfessionalDetailsWithCopySameDataToSpouseUnchecked()[pri:4, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:27:26 IST" name="VerifySaveProfessionalDetailsWithCopySameDataToSpouseUnchecked" finished-at="2025-05-14T15:28:32 IST" duration-ms="66131" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySaveProfessionalDetailsWithCopySameDataToSpouseUnchecked -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:28:32 IST" name="afterMethod" finished-at="2025-05-14T15:28:32 IST" duration-ms="56" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifySaveProfessionalDetailsWithCopySameDataToSpouseUnchecked status=SUCCESS method=MyServiceProviderTestScript.VerifySaveProfessionalDetailsWithCopySameDataToSpouseUnchecked()[pri:4, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript.VerifySaveProfessionalDetailsWithCopySameDataToSpouseUnchecked()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:28:32 IST" name="afterClass" finished-at="2025-05-14T15:28:32 IST" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:28:32 IST" name="afterTest" finished-at="2025-05-14T15:28:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript@5c671d7f]" started-at="2025-05-14T15:28:33 IST" name="afterSuite" finished-at="2025-05-14T15:28:33 IST" duration-ms="29" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.nspl.MyServiceProviderTestScript.MyServiceProviderTestScript -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
