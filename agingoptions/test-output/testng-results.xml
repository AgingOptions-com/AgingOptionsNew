<?xml version="1.0" encoding="UTF-8"?>
<testng-results retried="2" ignored="0" total="19" passed="15" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-04-01T17:32:03 IST" name="Suite" finished-at="2025-04-01T17:45:38 IST" duration-ms="814791">
    <groups>
    </groups>
    <test started-at="2025-04-01T17:32:03 IST" name="Test" finished-at="2025-04-01T17:45:38 IST" duration-ms="814791">
      <class name="com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:32:03 IST" name="beforeSuite" finished-at="2025-04-01T17:32:03 IST" duration-ms="256" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:32:03 IST" name="beforeTest" finished-at="2025-04-01T17:33:12 IST" duration-ms="68736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:12 IST" name="beforeClass" finished-at="2025-04-01T17:33:12 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:12 IST" name="beforeMethod" finished-at="2025-04-01T17:33:12 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_001_Health_Personal_MedicalHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC_001_Health_Personal_MedicalHistoryPage()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:12 IST" name="TC_001_Health_Personal_MedicalHistoryPage" finished-at="2025-04-01T17:33:34 IST" duration-ms="21835" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_001_Health_Personal_MedicalHistoryPage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:34 IST" name="afterMethod" finished-at="2025-04-01T17:33:34 IST" duration-ms="343" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_001_Health_Personal_MedicalHistoryPage status=SUCCESS method=MarriedUserPersonalMedicalHistoryTestCases.TC_001_Health_Personal_MedicalHistoryPage()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_001_Health_Personal_MedicalHistoryPage()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_002_Health_Personal_Medical_History_MedicalConditionsElementVisibility()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:34 IST" name="TC_002_Health_Personal_Medical_History_MedicalConditionsElementVisibility" finished-at="2025-04-01T17:33:51 IST" depends-on-methods="com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_001_Health_Personal_MedicalHistoryPage" duration-ms="17330" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_002_Health_Personal_Medical_History_MedicalConditionsElementVisibility -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:34 IST" name="beforeMethod" finished-at="2025-04-01T17:33:34 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_002_Health_Personal_Medical_History_MedicalConditionsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:51 IST" name="afterMethod" finished-at="2025-04-01T17:33:51 IST" duration-ms="60" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_002_Health_Personal_Medical_History_MedicalConditionsElementVisibility status=SUCCESS method=MarriedUserPersonalMedicalHistoryTestCases.TC_002_Health_Personal_Medical_History_MedicalConditionsElementVisibility()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_002_Health_Personal_Medical_History_MedicalConditionsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_003_Health_Personal_Medical_History_EnvironmentalLifeStyleFactorsElementVisibility()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:51 IST" name="TC_003_Health_Personal_Medical_History_EnvironmentalLifeStyleFactorsElementVisibility" finished-at="2025-04-01T17:34:00 IST" depends-on-methods="com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_001_Health_Personal_MedicalHistoryPage" duration-ms="8656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_003_Health_Personal_Medical_History_EnvironmentalLifeStyleFactorsElementVisibility -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:33:51 IST" name="beforeMethod" finished-at="2025-04-01T17:33:51 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_003_Health_Personal_Medical_History_EnvironmentalLifeStyleFactorsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:00 IST" name="afterMethod" finished-at="2025-04-01T17:34:00 IST" duration-ms="40" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_003_Health_Personal_Medical_History_EnvironmentalLifeStyleFactorsElementVisibility status=SUCCESS method=MarriedUserPersonalMedicalHistoryTestCases.TC_003_Health_Personal_Medical_History_EnvironmentalLifeStyleFactorsElementVisibility()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_003_Health_Personal_Medical_History_EnvironmentalLifeStyleFactorsElementVisibility()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_004_Health_personal_Medical_History_BloodTypeSelection()[pri:4, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:00 IST" name="TC_004_Health_personal_Medical_History_BloodTypeSelection" finished-at="2025-04-01T17:34:20 IST" depends-on-methods="com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_001_Health_Personal_MedicalHistoryPage" duration-ms="20035" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_004_Health_personal_Medical_History_BloodTypeSelection -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:00 IST" name="beforeMethod" finished-at="2025-04-01T17:34:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_004_Health_personal_Medical_History_BloodTypeSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:20 IST" name="afterMethod" finished-at="2025-04-01T17:34:20 IST" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_004_Health_personal_Medical_History_BloodTypeSelection status=SUCCESS method=MarriedUserPersonalMedicalHistoryTestCases.TC_004_Health_personal_Medical_History_BloodTypeSelection()[pri:4, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_004_Health_personal_Medical_History_BloodTypeSelection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:20 IST" name="beforeMethod" finished-at="2025-04-01T17:34:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_005_Health_personal_Medical_History_MedicalConditionElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC_005_Health_personal_Medical_History_MedicalConditionElement()[pri:5, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:20 IST" name="TC_005_Health_personal_Medical_History_MedicalConditionElement" finished-at="2025-04-01T17:34:45 IST" duration-ms="24305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_005_Health_personal_Medical_History_MedicalConditionElement -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:45 IST" name="afterMethod" finished-at="2025-04-01T17:34:45 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_005_Health_personal_Medical_History_MedicalConditionElement status=SUCCESS method=MarriedUserPersonalMedicalHistoryTestCases.TC_005_Health_personal_Medical_History_MedicalConditionElement()[pri:5, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_005_Health_personal_Medical_History_MedicalConditionElement()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_006_Health_Personal_Medical_History_EnvironmentalLifestyleFactorsDetails()[pri:6, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:45 IST" name="TC_006_Health_Personal_Medical_History_EnvironmentalLifestyleFactorsDetails" finished-at="2025-04-01T17:35:07 IST" duration-ms="22076" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_006_Health_Personal_Medical_History_EnvironmentalLifestyleFactorsDetails -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:34:45 IST" name="beforeMethod" finished-at="2025-04-01T17:34:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_006_Health_Personal_Medical_History_EnvironmentalLifestyleFactorsDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:35:07 IST" name="afterMethod" finished-at="2025-04-01T17:35:07 IST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_006_Health_Personal_Medical_History_EnvironmentalLifestyleFactorsDetails status=SUCCESS method=MarriedUserPersonalMedicalHistoryTestCases.TC_006_Health_Personal_Medical_History_EnvironmentalLifestyleFactorsDetails()[pri:6, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases.TC_006_Health_Personal_Medical_History_EnvironmentalLifestyleFactorsDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:35:07 IST" name="afterClass" finished-at="2025-04-01T17:35:07 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:45:38 IST" name="afterTest" finished-at="2025-04-01T17:45:38 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases@7d8704ef]" started-at="2025-04-01T17:45:38 IST" name="afterSuite" finished-at="2025-04-01T17:45:38 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.nspl.agingoptions.healthpage.testcases.MarriedUserPersonalMedicalHistoryTestCases -->
      <class name="com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases">
        <test-method retried="true" signature="TC_007_Health_LifeStyleGeneralHealthNutritionDetails()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:35:07 IST" name="TC_007_Health_LifeStyleGeneralHealthNutritionDetails" finished-at="2025-04-01T17:35:37 IST" duration-ms="30407" status="SKIP">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [There is no sedentary] but found [Yes I regular Exercise]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [There is no sedentary] but found [Yes I regular Exercise]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at org.testng.Assert.assertEquals(Assert.java:666)
at com.nspl.agingoptions.webUtil.WebUtil.verifyActualExpectedText(WebUtil.java:869)
at com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails(MarriedUserLifeStyleTestCases.java:72)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_Health_LifeStyleGeneralHealthNutritionDetails -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:35:07 IST" name="beforeClass" finished-at="2025-04-01T17:35:07 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:35:07 IST" name="beforeMethod" finished-at="2025-04-01T17:35:07 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:35:37 IST" name="afterMethod" finished-at="2025-04-01T17:35:37 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_Health_LifeStyleGeneralHealthNutritionDetails status=SKIP method=MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_007_Health_LifeStyleGeneralHealthNutritionDetails()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:35:37 IST" name="TC_007_Health_LifeStyleGeneralHealthNutritionDetails" finished-at="2025-04-01T17:36:38 IST" duration-ms="61177" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='label104']/preceding-sibling::div/span"}
  (Session info: chrome=134.0.6998.178)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [81e9983377fbf68db9286e9c6510d531, findElement {using=xpath, value=//div[@id='label104']/preceding-sibling::div/span}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51188}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51188/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 81e9983377fbf68db9286e9c6510d531]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='label104']/preceding-sibling::div/span"}
  (Session info: chrome=134.0.6998.178)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [81e9983377fbf68db9286e9c6510d531, findElement {using=xpath, value=//div[@id='label104']/preceding-sibling::div/span}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51188}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51188/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 81e9983377fbf68db9286e9c6510d531
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at com.nspl.agingoptions.webUtil.WebUtil.click(WebUtil.java:331)
at com.agingoptions.health.LifeStyle.selectSpouseHowOftenDoYouExerciseDropDown7Options(LifeStyle.java:63)
at com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails(MarriedUserLifeStyleTestCases.java:31)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_007_Health_LifeStyleGeneralHealthNutritionDetails -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:35:37 IST" name="beforeMethod" finished-at="2025-04-01T17:35:37 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:36:38 IST" name="afterMethod" finished-at="2025-04-01T17:36:39 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_007_Health_LifeStyleGeneralHealthNutritionDetails status=FAILURE method=MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_007_Health_LifeStyleGeneralHealthNutritionDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_008_Health_InputSubstanceUseDetails()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:36:39 IST" name="TC_008_Health_InputSubstanceUseDetails" finished-at="2025-04-01T17:37:03 IST" duration-ms="24846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_008_Health_InputSubstanceUseDetails -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:36:39 IST" name="beforeMethod" finished-at="2025-04-01T17:36:39 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_008_Health_InputSubstanceUseDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:37:03 IST" name="afterMethod" finished-at="2025-04-01T17:37:03 IST" duration-ms="24" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_008_Health_InputSubstanceUseDetails status=SUCCESS method=MarriedUserLifeStyleTestCases.TC_008_Health_InputSubstanceUseDetails()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_008_Health_InputSubstanceUseDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_09_Health_InputSocialHabitsDetails()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:37:03 IST" name="TC_09_Health_InputSocialHabitsDetails" finished-at="2025-04-01T17:37:25 IST" duration-ms="21959" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_09_Health_InputSocialHabitsDetails -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:37:03 IST" name="beforeMethod" finished-at="2025-04-01T17:37:03 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_09_Health_InputSocialHabitsDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:37:25 IST" name="afterMethod" finished-at="2025-04-01T17:37:25 IST" duration-ms="23" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_09_Health_InputSocialHabitsDetails status=SUCCESS method=MarriedUserLifeStyleTestCases.TC_09_Health_InputSocialHabitsDetails()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases.TC_09_Health_InputSocialHabitsDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases@1e66f1f5]" started-at="2025-04-01T17:37:25 IST" name="afterClass" finished-at="2025-04-01T17:37:25 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.nspl.agingoptions.healthpage.testcases.MarriedUserLifeStyleTestCases -->
      <class name="com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:37:25 IST" name="beforeClass" finished-at="2025-04-01T17:37:25 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="TC_010_Health_FamilyMedicalHistoryLivingParentInfoDetails()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:37:25 IST" name="TC_010_Health_FamilyMedicalHistoryLivingParentInfoDetails" finished-at="2025-04-01T17:38:01 IST" duration-ms="35578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_010_Health_FamilyMedicalHistoryLivingParentInfoDetails -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:37:25 IST" name="beforeMethod" finished-at="2025-04-01T17:37:25 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_010_Health_FamilyMedicalHistoryLivingParentInfoDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:38:01 IST" name="afterMethod" finished-at="2025-04-01T17:38:01 IST" duration-ms="35" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_010_Health_FamilyMedicalHistoryLivingParentInfoDetails status=SUCCESS method=MarriedUserFamilyMedicalHistoryTestCases.TC_010_Health_FamilyMedicalHistoryLivingParentInfoDetails()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_010_Health_FamilyMedicalHistoryLivingParentInfoDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:38:01 IST" name="beforeMethod" finished-at="2025-04-01T17:38:01 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_011_Health_familyMedicalHistoryNonLivingParentInfoDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC_011_Health_familyMedicalHistoryNonLivingParentInfoDetails()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:38:01 IST" name="TC_011_Health_familyMedicalHistoryNonLivingParentInfoDetails" finished-at="2025-04-01T17:38:33 IST" duration-ms="32148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_011_Health_familyMedicalHistoryNonLivingParentInfoDetails -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:38:33 IST" name="afterMethod" finished-at="2025-04-01T17:38:33 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_011_Health_familyMedicalHistoryNonLivingParentInfoDetails status=SUCCESS method=MarriedUserFamilyMedicalHistoryTestCases.TC_011_Health_familyMedicalHistoryNonLivingParentInfoDetails()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_011_Health_familyMedicalHistoryNonLivingParentInfoDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_012_FamilyMedicalHistoryNonLivingParentInfoDetails()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:38:33 IST" name="TC_012_FamilyMedicalHistoryNonLivingParentInfoDetails" finished-at="2025-04-01T17:39:06 IST" duration-ms="32440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_012_FamilyMedicalHistoryNonLivingParentInfoDetails -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:38:33 IST" name="beforeMethod" finished-at="2025-04-01T17:38:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_012_FamilyMedicalHistoryNonLivingParentInfoDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:39:06 IST" name="afterMethod" finished-at="2025-04-01T17:39:06 IST" duration-ms="30" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_012_FamilyMedicalHistoryNonLivingParentInfoDetails status=SUCCESS method=MarriedUserFamilyMedicalHistoryTestCases.TC_012_FamilyMedicalHistoryNonLivingParentInfoDetails()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_012_FamilyMedicalHistoryNonLivingParentInfoDetails()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:39:06 IST" name="beforeMethod" finished-at="2025-04-01T17:39:06 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_013_FamilyMedicalHistoryMyFamilyMedicalHistoryYesRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC_013_FamilyMedicalHistoryMyFamilyMedicalHistoryYesRadioButton()[pri:4, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:39:06 IST" name="TC_013_FamilyMedicalHistoryMyFamilyMedicalHistoryYesRadioButton" finished-at="2025-04-01T17:40:37 IST" duration-ms="91802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_013_FamilyMedicalHistoryMyFamilyMedicalHistoryYesRadioButton -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:40:37 IST" name="afterMethod" finished-at="2025-04-01T17:40:38 IST" duration-ms="37" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_013_FamilyMedicalHistoryMyFamilyMedicalHistoryYesRadioButton status=SUCCESS method=MarriedUserFamilyMedicalHistoryTestCases.TC_013_FamilyMedicalHistoryMyFamilyMedicalHistoryYesRadioButton()[pri:4, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_013_FamilyMedicalHistoryMyFamilyMedicalHistoryYesRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_014_FamilyMedicalHistoryMyFamilyMedicalHistoryNoRadioButton()[pri:5, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:40:38 IST" name="TC_014_FamilyMedicalHistoryMyFamilyMedicalHistoryNoRadioButton" finished-at="2025-04-01T17:41:20 IST" duration-ms="42113" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_014_FamilyMedicalHistoryMyFamilyMedicalHistoryNoRadioButton -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:40:38 IST" name="beforeMethod" finished-at="2025-04-01T17:40:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_014_FamilyMedicalHistoryMyFamilyMedicalHistoryNoRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:41:20 IST" name="afterMethod" finished-at="2025-04-01T17:41:20 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_014_FamilyMedicalHistoryMyFamilyMedicalHistoryNoRadioButton status=SUCCESS method=MarriedUserFamilyMedicalHistoryTestCases.TC_014_FamilyMedicalHistoryMyFamilyMedicalHistoryNoRadioButton()[pri:5, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases.TC_014_FamilyMedicalHistoryMyFamilyMedicalHistoryNoRadioButton()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases@4e50c791]" started-at="2025-04-01T17:41:20 IST" name="afterClass" finished-at="2025-04-01T17:41:20 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.nspl.agingoptions.healthpage.testcases.MarriedUserFamilyMedicalHistoryTestCases -->
      <class name="com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:41:20 IST" name="beforeClass" finished-at="2025-04-01T17:41:20 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:41:20 IST" name="beforeMethod" finished-at="2025-04-01T17:41:20 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_015_PrimaryMemberIDontHavePrimaryCarePhyscian()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC_015_PrimaryMemberIDontHavePrimaryCarePhyscian()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:41:20 IST" name="TC_015_PrimaryMemberIDontHavePrimaryCarePhyscian" finished-at="2025-04-01T17:41:45 IST" duration-ms="25319" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_015_PrimaryMemberIDontHavePrimaryCarePhyscian -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:41:45 IST" name="afterMethod" finished-at="2025-04-01T17:41:45 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_015_PrimaryMemberIDontHavePrimaryCarePhyscian status=SUCCESS method=PrimaryCarePhysicianTestCases.TC_015_PrimaryMemberIDontHavePrimaryCarePhyscian()[pri:1, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_015_PrimaryMemberIDontHavePrimaryCarePhyscian()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="TC_016_SpouseIDontHavePrimaryCarePhyscian()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:41:45 IST" name="TC_016_SpouseIDontHavePrimaryCarePhyscian" finished-at="2025-04-01T17:42:10 IST" duration-ms="25176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_016_SpouseIDontHavePrimaryCarePhyscian -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:41:45 IST" name="beforeMethod" finished-at="2025-04-01T17:41:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_016_SpouseIDontHavePrimaryCarePhyscian()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:42:10 IST" name="afterMethod" finished-at="2025-04-01T17:42:10 IST" duration-ms="22" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_016_SpouseIDontHavePrimaryCarePhyscian status=SUCCESS method=PrimaryCarePhysicianTestCases.TC_016_SpouseIDontHavePrimaryCarePhyscian()[pri:2, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_016_SpouseIDontHavePrimaryCarePhyscian()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:42:10 IST" name="beforeMethod" finished-at="2025-04-01T17:42:10 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method retried="true" signature="TC_017_inputPrimaryMemberCarePhysicianAndSave()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:42:10 IST" name="TC_017_inputPrimaryMemberCarePhysicianAndSave" finished-at="2025-04-01T17:42:29 IST" duration-ms="18646" status="SKIP">
          <exception class="org.openqa.selenium.InvalidElementStateException">
            <message>
              <![CDATA[invalid element state: Element is not currently interactable and may not be manipulated
  (Session info: chrome=134.0.6998.178)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [81e9983377fbf68db9286e9c6510d531, clearElement {id=f.424FCDAB6533C118C4394626FECD94D2.d.E223E0811931F4A080C123E4C6AE1B5C.e.2704}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51188}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51188/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (81e9983377fbf68db9286e9c6510d531)] -> xpath: //input[@id='fName']]
Session ID: 81e9983377fbf68db9286e9c6510d531]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidElementStateException: invalid element state: Element is not currently interactable and may not be manipulated
  (Session info: chrome=134.0.6998.178)
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [81e9983377fbf68db9286e9c6510d531, clearElement {id=f.424FCDAB6533C118C4394626FECD94D2.d.E223E0811931F4A080C123E4C6AE1B5C.e.2704}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51188}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51188/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (81e9983377fbf68db9286e9c6510d531)] -> xpath: //input[@id='fName']]
Session ID: 81e9983377fbf68db9286e9c6510d531
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:130)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy20.clear(Unknown Source)
at com.nspl.agingoptions.webUtil.WebUtil.sendValue(WebUtil.java:201)
at com.agingoptions.health.PrimaryCarePhysician.inputFirstName(PrimaryCarePhysician.java:84)
at com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave(PrimaryCarePhysicianTestCases.java:66)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidElementStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_017_inputPrimaryMemberCarePhysicianAndSave -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:42:29 IST" name="afterMethod" finished-at="2025-04-01T17:42:29 IST" duration-ms="21" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_017_inputPrimaryMemberCarePhysicianAndSave status=SKIP method=PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:42:29 IST" name="beforeMethod" finished-at="2025-04-01T17:42:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="TC_017_inputPrimaryMemberCarePhysicianAndSave()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:42:29 IST" name="TC_017_inputPrimaryMemberCarePhysicianAndSave" finished-at="2025-04-01T17:45:38 IST" duration-ms="188671" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//button[contains(text(),'Save & Proceed to Radha')]"}
  (Session info: chrome=134.0.6998.178)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [81e9983377fbf68db9286e9c6510d531, findElement {using=xpath, value=//button[contains(text(),'Save & Proceed to Radha')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51188}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51188/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 81e9983377fbf68db9286e9c6510d531]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//button[contains(text(),'Save & Proceed to Radha')]"}
  (Session info: chrome=134.0.6998.178)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.16.1', revision: '9b4c83354e'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.6'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [81e9983377fbf68db9286e9c6510d531, findElement {using=xpath, value=//button[contains(text(),'Save & Proceed to Radha')]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 134.0.6998.178, chrome: {chromedriverVersion: 134.0.6998.165 (fd886e2cb29..., userDataDir: C:\Users\AO\AppData\Local\T...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:51188}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:51188/devtoo..., se:cdpVersion: 134.0.6998.178, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 81e9983377fbf68db9286e9c6510d531
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:200)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:175)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:523)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:360)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:354)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy20.click(Unknown Source)
at com.nspl.agingoptions.webUtil.WebUtil.click(WebUtil.java:331)
at com.agingoptions.health.PrimaryCarePhysician.clickSaveAndProceedToSpouseBT(PrimaryCarePhysician.java:218)
at com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave(PrimaryCarePhysicianTestCases.java:88)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.retryFailed(TestInvoker.java:269)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:76)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TC_017_inputPrimaryMemberCarePhysicianAndSave -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:45:38 IST" name="afterMethod" finished-at="2025-04-01T17:45:38 IST" duration-ms="318" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TC_017_inputPrimaryMemberCarePhysicianAndSave status=FAILURE method=PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave()[pri:3, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases.TC_017_inputPrimaryMemberCarePhysicianAndSave()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases@7530ad9c]" started-at="2025-04-01T17:45:38 IST" name="afterClass" finished-at="2025-04-01T17:45:38 IST" duration-ms="7" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- com.nspl.agingoptions.healthpage.testcases.PrimaryCarePhysicianTestCases -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
